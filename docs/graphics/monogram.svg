<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   width="800px"
   height="600px"
   viewBox="0 0 800 600"
   version="1.1"
   id="SVGRoot"
   sodipodi:docname="monogram.svg"
   xml:space="preserve"
   inkscape:version="1.2.2 (b0a8486541, 2022-12-01)"
   inkscape:export-filename="fasthapix.svg"
   inkscape:export-xdpi="96"
   inkscape:export-ydpi="96"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg"><sodipodi:namedview
     id="namedview39"
     pagecolor="#ffffff"
     bordercolor="#000000"
     borderopacity="0.4"
     inkscape:showpageshadow="2"
     inkscape:pageopacity="0.4"
     inkscape:pagecheckerboard="0"
     inkscape:deskcolor="#ffffff"
     inkscape:document-units="px"
     showgrid="false"
     inkscape:zoom="1.4855583"
     inkscape:cx="317.72567"
     inkscape:cy="273.6345"
     inkscape:window-width="1920"
     inkscape:window-height="1011"
     inkscape:window-x="0"
     inkscape:window-y="0"
     inkscape:window-maximized="1"
     inkscape:current-layer="SVGRoot" /><defs
     id="defs34"><rect
       x="223.10939"
       y="131.13557"
       width="470.56504"
       height="117.64718"
       id="rect153" /><linearGradient
       id="linearGradient114895"
       inkscape:swatch="solid"><stop
         style="stop-color:#000000;stop-opacity:1;"
         offset="0"
         id="stop114893" /></linearGradient></defs><rect
     style="display:inline;opacity:0.54;fill:#971111;fill-opacity:0.20749132;stroke:#971111;stroke-width:0;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:5.2;stroke-dasharray:none;stroke-opacity:1"
     id="rect3054"
     width="592.03699"
     height="137.64554"
     x="-10.135767"
     y="91.30024"
     rx="0"
     ry="0"
     inkscape:label="back"
     sodipodi:insensitive="true"
     transform="translate(114.11726,139.87699)" /><g
     aria-label="just anuver fast pyweb appx"
     transform="translate(114.11726,139.87699)"
     id="text216635"
     style="font-style:italic;font-size:32px;font-family:'Linux Libertine O';-inkscape-font-specification:'Linux Libertine O, Italic';display:inline;stroke:#000000"
     inkscape:label="punchline"><path
       d="m 187.68639,191.767 c 0.288,-1.28 0.608,-2.624 0.608,-3.008 0,-0.448 -0.224,-0.704 -0.64,-0.704 -1.024,0 -2.464,0.192 -3.968,0.416 -0.224,0.256 -0.16,0.608 0.032,0.896 l 1.28,0.096 c 0.384,0.032 0.576,0.32 0.576,0.64 0,0.32 -0.064,0.736 -0.256,1.632 l -1.024,4.64 c -0.704,3.136 -0.992,5.152 -1.568,7.424 -0.704,2.752 -1.792,3.328 -2.368,3.328 -0.896,0 -0.704,-1.376 -2.272,-1.376 -0.448,0 -0.928,0.32 -0.928,0.992 0,1.024 1.216,1.536 2.624,1.536 4,0 5.664,-5.952 7.328,-13.76 z m -1.44,-8 c 0,0.832 0.704,1.536 1.536,1.536 0.832,0 1.536,-0.704 1.536,-1.536 0,-0.832 -0.704,-1.536 -1.536,-1.536 -0.832,0 -1.536,0.704 -1.536,1.536 z"
       id="path546" /><path
       d="m 204.13441,190.743 c 0.096,-0.544 0.416,-1.536 0.416,-1.92 0,-0.544 -0.32,-0.864 -1.344,-0.864 -1.216,0 -1.152,1.408 -1.472,2.624 l -0.928,3.52 c -2.368,4.032 -3.936,6.304 -5.536,6.304 -0.576,0 -0.96,-0.32 -0.96,-1.184 0,-0.512 0.064,-1.184 0.288,-2.048 l 1.376,-5.216 c 0.256,-1.024 0.672,-2.336 0.672,-2.944 0,-0.608 -0.192,-1.056 -1.152,-1.056 -1.536,0 -3.36,1.088 -4.832,2.976 0.096,0.288 0.288,0.544 0.736,0.544 0.832,-0.96 1.888,-1.6 2.208,-1.6 0.224,0 0.32,0.16 0.32,0.544 0,0.288 -0.192,0.992 -0.416,1.824 l -1.408,5.376 c -0.224,0.832 -0.32,1.536 -0.32,2.144 0,1.824 1.024,2.56 2.144,2.56 2.496,0 4.096,-1.984 6.368,-5.312 l 0.096,0.064 -0.352,1.248 c -0.288,1.024 -0.544,2.336 -0.544,2.944 0,0.608 0.224,1.056 1.184,1.056 1.536,0 2.976,-1.088 4.448,-2.976 -0.096,-0.288 -0.288,-0.544 -0.736,-0.544 -0.832,0.96 -1.76,1.6 -2.08,1.6 -0.224,0 -0.32,-0.16 -0.32,-0.544 0,-0.288 0.16,-0.992 0.352,-1.824 z"
       id="path548" /><path
       d="m 210.18241,202.327 h 0.48 c 3.136,0 5.024,-1.728 5.024,-4.096 0,-1.504 -0.864,-2.976 -3.808,-4.928 -0.96,-0.64 -1.28,-1.216 -1.28,-2.016 0,-1.12 0.64,-2.272 2.016,-2.272 0.8,0 1.344,0.256 1.44,0.928 0.096,0.768 0.64,1.664 1.472,1.664 0.896,0 1.152,-0.576 1.152,-1.088 0,-1.152 -1.664,-2.56 -3.648,-2.56 -2.784,0 -4.48,2.048 -4.48,4 0,1.28 0.704,2.656 2.784,4.064 1.696,1.152 1.952,2.208 1.952,2.88 0,1.76 -1.28,2.368 -2.72,2.368 -0.832,0 -1.28,-0.16 -1.376,-0.864 -0.096,-0.736 -0.544,-1.696 -1.504,-1.696 -0.928,0 -1.184,0.768 -1.184,1.12 0,1.184 1.472,2.368 3.68,2.496 z"
       id="path550" /><path
       d="m 221.86243,188.279 -1.696,0.096 c -0.608,0.032 -0.832,0.288 -0.896,0.544 -0.032,0.096 -0.128,0.48 -0.128,0.544 0,0.064 0.096,0.064 0.192,0.064 h 2.24 l -1.952,8.704 c -0.256,1.056 -0.448,2.016 -0.448,2.624 0,1.152 0.576,1.472 1.568,1.472 1.408,0 3.52,-1.312 4.64,-3.296 -0.096,-0.416 -0.32,-0.608 -0.704,-0.608 -1.472,1.664 -2.048,1.984 -2.56,1.984 -0.096,0 -0.416,-0.064 -0.416,-0.448 0,-0.288 0.096,-0.928 0.352,-2.016 l 1.888,-8.416 h 3.136 c 0.384,-0.16 0.672,-0.992 0.32,-1.248 h -3.168 l 0.32,-1.44 c 0.128,-0.576 0.416,-1.536 0.416,-1.92 0,-0.544 -0.256,-0.864 -1.28,-0.864 -1.152,0 -1.12,1.44 -1.408,2.624 z"
       id="path552" /><path
       d="m 246.85441,188.151 c -0.864,-0.096 -1.28,-0.192 -2.56,-0.192 -3.424,0 -8.064,5.024 -8.064,10.048 0,1.792 0.416,4.32 3.104,4.32 1.696,0 3.488,-1.76 5.408,-4.608 l 0.064,0.064 -0.416,1.344 c -0.224,0.736 -0.32,1.376 -0.32,1.76 0,0.608 0.224,1.44 1.312,1.44 1.984,0 3.264,-1.28 4.096,-3.104 -0.192,-0.256 -0.32,-0.512 -0.736,-0.512 -0.864,1.184 -1.472,1.696 -1.792,1.696 -0.096,0 -0.384,-0.064 -0.384,-0.448 0,-0.288 0.192,-1.184 0.32,-1.792 l 2.208,-9.952 c -0.768,0 -1.6,0.096 -2.24,-0.064 z m -1.6,6.848 c -1.568,2.88 -4.032,5.568 -5.056,5.568 -1.088,0 -1.408,-1.28 -1.408,-3.072 0,-3.392 2.656,-8.544 5.6,-8.544 0.672,0 1.376,0.224 1.984,0.608 0,0 -0.32,3.392 -1.12,5.44 z"
       id="path554" /><path
       d="m 263.14241,198.039 1.216,-5.088 c 0.256,-1.12 0.416,-1.856 0.416,-2.432 0,-1.92 -0.864,-2.56 -2.112,-2.56 -1.664,0 -3.04,0.672 -5.984,4.128 l -0.032,-0.032 0.096,-0.288 c 0.416,-1.184 0.672,-2.56 0.672,-3.008 0,-0.448 -0.224,-0.704 -0.64,-0.704 -1.024,0 -2.528,0.192 -4.032,0.416 -0.224,0.256 -0.16,0.608 0.032,0.896 l 1.28,0.096 c 0.384,0.032 0.576,0.32 0.576,0.64 0,0.288 -0.096,0.736 -0.288,1.632 l -1.824,7.968 c -0.128,0.64 -0.384,1.44 -0.384,1.76 0,0.544 0.352,0.864 1.376,0.864 1.216,0 1.184,-1.408 1.44,-2.624 l 1.248,-5.312 c 2.016,-2.624 3.776,-4.512 4.928,-4.512 0.672,0 1.12,0.16 1.12,1.152 0,0.416 -0.224,1.28 -0.416,2.176 l -1.216,5.12 c -0.256,1.024 -0.544,2.336 -0.544,2.944 0,0.608 0.352,1.056 1.312,1.056 1.536,0 3.072,-1.088 4.544,-2.976 -0.096,-0.288 -0.288,-0.544 -0.736,-0.544 -0.832,0.96 -1.76,1.6 -2.08,1.6 -0.256,0 -0.32,-0.16 -0.32,-0.544 0,-0.288 0.16,-0.992 0.352,-1.824 z"
       id="path556" /><path
       d="m 282.0544,190.743 c 0.096,-0.544 0.416,-1.536 0.416,-1.92 0,-0.544 -0.32,-0.864 -1.344,-0.864 -1.216,0 -1.152,1.408 -1.472,2.624 l -0.928,3.52 c -2.368,4.032 -3.936,6.304 -5.536,6.304 -0.576,0 -0.96,-0.32 -0.96,-1.184 0,-0.512 0.064,-1.184 0.288,-2.048 l 1.376,-5.216 c 0.256,-1.024 0.672,-2.336 0.672,-2.944 0,-0.608 -0.192,-1.056 -1.152,-1.056 -1.536,0 -3.36,1.088 -4.832,2.976 0.096,0.288 0.288,0.544 0.736,0.544 0.832,-0.96 1.888,-1.6 2.208,-1.6 0.224,0 0.32,0.16 0.32,0.544 0,0.288 -0.192,0.992 -0.416,1.824 l -1.408,5.376 c -0.224,0.832 -0.32,1.536 -0.32,2.144 0,1.824 1.024,2.56 2.144,2.56 2.496,0 4.096,-1.984 6.368,-5.312 l 0.096,0.064 -0.352,1.248 c -0.288,1.024 -0.544,2.336 -0.544,2.944 0,0.608 0.224,1.056 1.184,1.056 1.536,0 2.976,-1.088 4.448,-2.976 -0.096,-0.288 -0.288,-0.544 -0.736,-0.544 -0.832,0.96 -1.76,1.6 -2.08,1.6 -0.224,0 -0.32,-0.16 -0.32,-0.544 0,-0.288 0.16,-0.992 0.352,-1.824 z"
       id="path558" /><path
       d="m 292.26239,199.575 -1.056,-7.456 c -0.448,-2.976 -0.832,-4.16 -2.016,-4.16 -1.088,0 -2.944,1.888 -4.064,3.616 0.096,0.32 0.32,0.512 0.704,0.576 0.896,-0.864 1.632,-1.568 2.24,-1.568 0.288,0 0.48,0.544 0.736,1.952 l 1.344,7.808 c 0.224,1.44 0.576,2.048 1.024,2.048 0.32,0 0.768,-0.48 1.376,-1.152 0.992,-1.088 2.208,-2.656 2.656,-3.296 0.704,-0.992 2.176,-2.912 3.072,-5.056 0.48,-1.088 0.864,-2.272 0.864,-3.392 0,-0.928 -0.448,-1.536 -1.664,-1.536 -0.96,0 -1.504,0.416 -1.504,1.184 0,0.224 0.064,0.512 0.192,0.672 0.48,0.736 0.672,1.408 0.672,1.92 0,1.408 -1.184,3.872 -2.432,5.536 -0.384,0.544 -1.568,2.048 -1.984,2.4 z"
       id="path560" /><path
       d="m 308.74242,190.167 c 0,2.88 -3.392,3.936 -5.824,4.256 1.152,-4.512 2.912,-5.472 4.256,-5.472 1.152,0 1.568,0.288 1.568,1.216 z m -6.016,5.472 c 8.352,-1.632 8.224,-4.096 8.224,-5.312 0,-0.8 -0.736,-2.368 -3.04,-2.368 -5.568,0 -7.872,5.44 -7.872,9.504 0,2.72 1.28,4.864 3.936,4.864 2.144,0 4.096,-1.12 5.984,-3.552 -0.16,-0.352 -0.352,-0.512 -0.736,-0.512 -1.824,1.856 -2.56,2.144 -4.096,2.144 -1.44,0 -2.432,-0.768 -2.432,-3.68 0,-0.16 0,-0.832 0.032,-1.088 z"
       id="path562" /><path
       d="m 317.28639,192.887 0.256,-1.12 c 0.288,-1.248 0.544,-2.336 0.544,-2.88 0,-0.512 -0.256,-0.832 -0.672,-0.832 -1.024,0 -2.336,0.224 -3.84,0.416 -0.224,0.256 -0.16,0.608 0.032,0.896 l 1.28,0.096 c 0.384,0.032 0.576,0.32 0.576,0.64 0,0.32 0,0.736 -0.224,1.632 l -1.792,7.968 c -0.128,0.704 -0.384,1.248 -0.384,1.76 0,0.544 0.288,0.864 1.216,0.864 1.12,0 1.152,-1.376 1.44,-2.624 l 0.96,-3.744 c 1.536,-2.784 3.328,-5.76 4.064,-5.76 0.32,0 0.48,0.16 0.672,0.384 0.224,0.256 0.64,0.672 1.088,0.672 0.864,0 1.44,-0.928 1.44,-1.792 0,-0.672 -0.48,-1.504 -1.664,-1.504 -1.6,0 -3.456,1.984 -4.864,4.96 z"
       id="path564" /><path
       d="m 335.6544,189.527 c -0.64,3.648 -0.992,5.568 -1.312,7.968 -0.416,3.136 -1.024,8.288 -2.208,10.112 -0.352,0.576 -0.96,0.96 -1.44,0.96 -0.448,0 -0.608,-0.224 -0.8,-0.512 -0.256,-0.448 -0.896,-1.056 -1.6,-1.056 -0.864,0 -1.184,0.608 -1.184,1.152 0,0.736 0.8,1.472 2.976,1.472 1.312,0 2.72,-0.64 3.712,-2.016 0.864,-1.216 1.6,-3.68 2.816,-9.76 0.512,-2.496 1.056,-5.088 1.536,-7.776 l 0.096,-0.544 h 2.976 c 0.288,0 0.768,-0.128 0.832,-0.384 0,0 0.16,-0.672 0.16,-0.704 0,-0.096 -0.064,-0.16 -0.224,-0.16 h -3.52 l 0.352,-1.824 c 0.224,-1.216 0.576,-2.304 0.96,-3.168 0.8,-1.984 2.112,-2.56 2.656,-2.56 0.736,0 1.088,0.192 1.216,0.832 0.128,0.704 0.416,1.6 1.504,1.6 0.96,0 1.216,-0.8 1.216,-1.088 0,-1.28 -1.408,-2.4 -3.68,-2.4 -0.896,0 -2.88,0.48 -4.192,2.048 -1.12,1.312 -1.952,3.808 -2.528,6.56 l -2.112,0.096 c -0.608,0.032 -0.832,0.288 -0.896,0.544 -0.032,0.096 -0.128,0.48 -0.128,0.544 0,0.064 0.096,0.064 0.192,0.064 z"
       id="path566" /><path
       d="m 352.80637,188.151 c -0.864,-0.096 -1.28,-0.192 -2.56,-0.192 -3.424,0 -8.064,5.024 -8.064,10.048 0,1.792 0.416,4.32 3.104,4.32 1.696,0 3.488,-1.76 5.408,-4.608 l 0.064,0.064 -0.416,1.344 c -0.224,0.736 -0.32,1.376 -0.32,1.76 0,0.608 0.224,1.44 1.312,1.44 1.984,0 3.264,-1.28 4.096,-3.104 -0.192,-0.256 -0.32,-0.512 -0.736,-0.512 -0.864,1.184 -1.472,1.696 -1.792,1.696 -0.096,0 -0.384,-0.064 -0.384,-0.448 0,-0.288 0.192,-1.184 0.32,-1.792 l 2.208,-9.952 c -0.768,0 -1.6,0.096 -2.24,-0.064 z m -1.6,6.848 c -1.568,2.88 -4.032,5.568 -5.056,5.568 -1.088,0 -1.408,-1.28 -1.408,-3.072 0,-3.392 2.656,-8.544 5.6,-8.544 0.672,0 1.376,0.224 1.984,0.608 0,0 -0.32,3.392 -1.12,5.44 z"
       id="path568" /><path
       d="m 360.80637,202.327 h 0.48 c 3.136,0 5.024,-1.728 5.024,-4.096 0,-1.504 -0.864,-2.976 -3.808,-4.928 -0.96,-0.64 -1.28,-1.216 -1.28,-2.016 0,-1.12 0.64,-2.272 2.016,-2.272 0.8,0 1.344,0.256 1.44,0.928 0.096,0.768 0.64,1.664 1.472,1.664 0.896,0 1.152,-0.576 1.152,-1.088 0,-1.152 -1.664,-2.56 -3.648,-2.56 -2.784,0 -4.48,2.048 -4.48,4 0,1.28 0.704,2.656 2.784,4.064 1.696,1.152 1.952,2.208 1.952,2.88 0,1.76 -1.28,2.368 -2.72,2.368 -0.832,0 -1.28,-0.16 -1.376,-0.864 -0.096,-0.736 -0.544,-1.696 -1.504,-1.696 -0.928,0 -1.184,0.768 -1.184,1.12 0,1.184 1.472,2.368 3.68,2.496 z"
       id="path570" /><path
       d="m 372.48639,188.279 -1.696,0.096 c -0.608,0.032 -0.832,0.288 -0.896,0.544 -0.032,0.096 -0.128,0.48 -0.128,0.544 0,0.064 0.096,0.064 0.192,0.064 h 2.24 l -1.952,8.704 c -0.256,1.056 -0.448,2.016 -0.448,2.624 0,1.152 0.576,1.472 1.568,1.472 1.408,0 3.52,-1.312 4.64,-3.296 -0.096,-0.416 -0.32,-0.608 -0.704,-0.608 -1.472,1.664 -2.048,1.984 -2.56,1.984 -0.096,0 -0.416,-0.064 -0.416,-0.448 0,-0.288 0.096,-0.928 0.352,-2.016 l 1.888,-8.416 h 3.136 c 0.384,-0.16 0.672,-0.992 0.32,-1.248 h -3.168 l 0.32,-1.44 c 0.128,-0.576 0.416,-1.536 0.416,-1.92 0,-0.544 -0.256,-0.864 -1.28,-0.864 -1.152,0 -1.12,1.44 -1.408,2.624 z"
       id="path572" /><path
       d="m 392.87037,189.079 c 0.096,-0.544 0.416,-1.536 0.416,-1.92 0,-0.544 -0.32,-0.864 -1.344,-0.864 -1.216,0 -1.216,1.408 -1.472,2.624 l -0.416,1.888 c -1.6,1.152 -2.784,2.112 -3.68,3.232 0.096,0.48 0.416,0.672 0.992,0.672 0.704,-0.928 1.408,-1.504 2.304,-2.24 l -3.296,14.688 c -0.192,0.896 -0.672,1.28 -1.696,1.44 l -0.608,0.096 c -0.16,0.032 -0.32,0.064 -0.32,0.256 v 0.608 l 0.064,0.064 c 0,0 2.176,-0.16 3.328,-0.16 1.248,0 3.424,0.064 3.424,0.064 l 0.064,-0.064 v -0.64 c 0,-0.16 -0.064,-0.224 -0.192,-0.256 l -0.608,-0.096 c -0.48,-0.064 -1.312,-0.224 -1.056,-1.312 l 1.408,-5.888 c 0.48,0.512 1.376,1.056 2.336,1.056 2.272,0 4.128,-1.248 5.536,-2.976 1.728,-2.112 2.592,-4.288 2.592,-6.592 0,-2.688 -0.896,-4.8 -4.096,-4.8 -1.632,0 -2.816,0.608 -3.68,1.12 z m 5.152,4.192 c 0,1.568 -0.64,3.776 -1.856,5.664 -0.864,1.312 -2.112,2.272 -3.328,2.272 -0.832,0 -1.696,-0.416 -2.368,-1.344 l 2.112,-9.344 c 0.8,-0.512 1.728,-1.088 2.944,-1.088 2.176,0 2.496,2.272 2.496,3.84 z"
       id="path574" /><path
       d="m 411.04638,202.007 c 0.64,-1.024 4.544,-6.976 5.44,-9.12 0.48,-1.088 0.864,-2.272 0.864,-3.392 0,-0.928 -0.448,-1.536 -1.664,-1.536 -0.96,0 -1.504,0.416 -1.504,1.184 0,0.224 0.064,0.512 0.192,0.672 0.48,0.736 0.672,1.408 0.672,1.92 0,1.408 -1.312,3.808 -2.432,5.536 0,0 -1.632,2.656 -2.464,3.872 l -0.192,-0.096 c -0.192,-3.744 -0.416,-6.752 -1.376,-10.72 -0.448,-1.696 -0.864,-2.368 -1.664,-2.368 -0.768,0 -3.104,1.344 -4.224,2.176 0.032,0.352 0.16,0.736 0.416,0.992 0.384,-0.192 1.44,-0.704 2.08,-0.704 0.416,0 0.736,0.096 0.896,0.352 0.16,0.256 0.32,0.768 0.512,1.344 0.96,3.264 1.92,11.072 1.568,11.872 -1.312,2.144 -2.656,3.552 -3.104,3.552 -0.32,0 -0.928,-0.416 -1.12,-0.576 -0.224,-0.192 -0.864,-0.448 -1.12,-0.448 -0.672,0 -1.472,0.64 -1.472,1.632 0,1.056 1.408,1.344 1.952,1.344 1.696,0 4.224,-2.048 6.304,-5.248 z"
       id="path576" /><path
       d="m 424.83837,202.391 c 0.224,0 0.8,-0.448 1.312,-1.248 1.184,-1.856 2.944,-4.928 4.064,-7.36 l 0.192,-0.032 c 0.48,2.048 0.96,4.64 1.28,6.784 0.224,1.536 0.448,1.856 0.736,1.856 0.352,0 0.832,-0.384 1.472,-1.184 0.896,-1.152 1.92,-2.592 2.4,-3.232 0.672,-0.992 1.824,-2.944 2.72,-5.088 0.48,-1.088 0.864,-2.272 0.864,-3.392 0,-0.928 -0.448,-1.536 -1.664,-1.536 -0.96,0 -1.504,0.416 -1.504,1.184 0,0.224 0.064,0.512 0.192,0.672 0.48,0.736 0.672,1.408 0.672,1.92 0,1.44 -0.832,3.904 -2.048,5.536 -0.512,0.672 -1.024,1.28 -1.44,1.728 l -0.256,-0.064 c -0.256,-1.664 -0.704,-3.776 -1.12,-5.536 -0.288,-1.216 -0.544,-2.272 -0.768,-2.848 -0.544,0.032 -1.056,0.128 -1.568,0.384 -1.344,3.104 -3.424,6.912 -4.192,8.064 l -0.064,-0.064 -1.088,-6.816 c -0.48,-2.944 -0.832,-4.16 -2.016,-4.16 -1.088,0 -2.944,1.888 -4.064,3.616 0.096,0.32 0.32,0.512 0.704,0.576 0.896,-0.864 1.632,-1.568 2.24,-1.568 0.288,0 0.48,0.544 0.736,1.952 l 1.344,7.808 c 0.256,1.632 0.576,2.048 0.864,2.048 z"
       id="path578" /><path
       d="m 449.47838,190.167 c 0,2.88 -3.392,3.936 -5.824,4.256 1.152,-4.512 2.912,-5.472 4.256,-5.472 1.152,0 1.568,0.288 1.568,1.216 z m -6.016,5.472 c 8.352,-1.632 8.224,-4.096 8.224,-5.312 0,-0.8 -0.736,-2.368 -3.04,-2.368 -5.568,0 -7.872,5.44 -7.872,9.504 0,2.72 1.28,4.864 3.936,4.864 2.144,0 4.096,-1.12 5.984,-3.552 -0.16,-0.352 -0.352,-0.512 -0.736,-0.512 -1.824,1.856 -2.56,2.144 -4.096,2.144 -1.44,0 -2.432,-0.768 -2.432,-3.68 0,-0.16 0,-0.832 0.032,-1.088 z"
       id="path580" /><path
       d="m 460.07035,183.351 c 0.448,-2.048 0.8,-3.36 0.8,-3.36 0,-0.224 -0.096,-0.32 -0.384,-0.32 -0.864,0.32 -3.168,0.736 -4.48,0.832 l -0.096,0.768 c 0,0.096 0.032,0.16 0.16,0.16 l 0.992,0.064 c 0.416,0 0.672,0.192 0.672,0.896 0,0.352 -0.064,0.896 -0.224,1.6 l -3.296,14.624 c -0.448,1.984 0.384,3.712 3.264,3.712 0.992,0 2.24,-0.416 3.36,-1.184 2.912,-1.984 5.856,-6.08 5.856,-9.376 0,-2.176 -0.448,-3.808 -3.36,-3.808 -2.208,0 -3.84,2.016 -4.96,3.328 l -0.064,-0.032 z m 4,9.024 c 0,4.64 -4,8.832 -6.432,8.832 -1.184,0 -1.376,-1.216 -0.832,-3.424 l 1.088,-4.608 c 1.504,-1.76 2.944,-3.712 4.48,-3.712 0.96,0 1.696,0.736 1.696,2.912 z"
       id="path582" /><path
       d="m 487.36637,188.151 c -0.864,-0.096 -1.28,-0.192 -2.56,-0.192 -3.424,0 -8.064,5.024 -8.064,10.048 0,1.792 0.416,4.32 3.104,4.32 1.696,0 3.488,-1.76 5.408,-4.608 l 0.064,0.064 -0.416,1.344 c -0.224,0.736 -0.32,1.376 -0.32,1.76 0,0.608 0.224,1.44 1.312,1.44 1.984,0 3.264,-1.28 4.096,-3.104 -0.192,-0.256 -0.32,-0.512 -0.736,-0.512 -0.864,1.184 -1.472,1.696 -1.792,1.696 -0.096,0 -0.384,-0.064 -0.384,-0.448 0,-0.288 0.192,-1.184 0.32,-1.792 l 2.208,-9.952 c -0.768,0 -1.6,0.096 -2.24,-0.064 z m -1.6,6.848 c -1.568,2.88 -4.032,5.568 -5.056,5.568 -1.088,0 -1.408,-1.28 -1.408,-3.072 0,-3.392 2.656,-8.544 5.6,-8.544 0.672,0 1.376,0.224 1.984,0.608 0,0 -0.32,3.392 -1.12,5.44 z"
       id="path584" /><path
       d="m 498.31037,189.079 c 0.096,-0.544 0.416,-1.536 0.416,-1.92 0,-0.544 -0.32,-0.864 -1.344,-0.864 -1.216,0 -1.216,1.408 -1.472,2.624 l -0.416,1.888 c -1.6,1.152 -2.784,2.112 -3.68,3.232 0.096,0.48 0.416,0.672 0.992,0.672 0.704,-0.928 1.408,-1.504 2.304,-2.24 l -3.296,14.688 c -0.192,0.896 -0.672,1.28 -1.696,1.44 l -0.608,0.096 c -0.16,0.032 -0.32,0.064 -0.32,0.256 v 0.608 l 0.064,0.064 c 0,0 2.176,-0.16 3.328,-0.16 1.248,0 3.424,0.064 3.424,0.064 l 0.064,-0.064 v -0.64 c 0,-0.16 -0.064,-0.224 -0.192,-0.256 l -0.608,-0.096 c -0.48,-0.064 -1.312,-0.224 -1.056,-1.312 l 1.408,-5.888 c 0.48,0.512 1.376,1.056 2.336,1.056 2.272,0 4.128,-1.248 5.536,-2.976 1.728,-2.112 2.592,-4.288 2.592,-6.592 0,-2.688 -0.896,-4.8 -4.096,-4.8 -1.632,0 -2.816,0.608 -3.68,1.12 z m 5.152,4.192 c 0,1.568 -0.64,3.776 -1.856,5.664 -0.864,1.312 -2.112,2.272 -3.328,2.272 -0.832,0 -1.696,-0.416 -2.368,-1.344 l 2.112,-9.344 c 0.8,-0.512 1.728,-1.088 2.944,-1.088 2.176,0 2.496,2.272 2.496,3.84 z"
       id="path586" /><path
       d="m 513.95838,189.079 c 0.096,-0.544 0.416,-1.536 0.416,-1.92 0,-0.544 -0.32,-0.864 -1.344,-0.864 -1.216,0 -1.216,1.408 -1.472,2.624 l -0.416,1.888 c -1.6,1.152 -2.784,2.112 -3.68,3.232 0.096,0.48 0.416,0.672 0.992,0.672 0.704,-0.928 1.408,-1.504 2.304,-2.24 l -3.296,14.688 c -0.192,0.896 -0.672,1.28 -1.696,1.44 l -0.608,0.096 c -0.16,0.032 -0.32,0.064 -0.32,0.256 v 0.608 l 0.064,0.064 c 0,0 2.176,-0.16 3.328,-0.16 1.248,0 3.424,0.064 3.424,0.064 l 0.064,-0.064 v -0.64 c 0,-0.16 -0.064,-0.224 -0.192,-0.256 l -0.608,-0.096 c -0.48,-0.064 -1.312,-0.224 -1.056,-1.312 l 1.408,-5.888 c 0.48,0.512 1.376,1.056 2.336,1.056 2.272,0 4.128,-1.248 5.536,-2.976 1.728,-2.112 2.592,-4.288 2.592,-6.592 0,-2.688 -0.896,-4.8 -4.096,-4.8 -1.632,0 -2.816,0.608 -3.68,1.12 z m 5.152,4.192 c 0,1.568 -0.64,3.776 -1.856,5.664 -0.864,1.312 -2.112,2.272 -3.328,2.272 -0.832,0 -1.696,-0.416 -2.368,-1.344 l 2.112,-9.344 c 0.8,-0.512 1.728,-1.088 2.944,-1.088 2.176,0 2.496,2.272 2.496,3.84 z"
       id="path588" /><path
       d="m 527.75039,192.119 1.12,3.168 -2.976,4.384 c -0.352,0.512 -0.672,0.608 -0.896,0.608 -0.256,0 -0.608,-0.064 -0.864,-0.192 -0.288,-0.128 -0.608,-0.192 -0.928,-0.192 -0.704,0 -1.216,0.512 -1.216,1.216 0,0.832 1.12,1.216 1.856,1.216 1.088,0 1.856,-0.48 3.264,-2.496 l 2.208,-3.168 1.248,3.872 c 0.384,1.28 0.736,1.792 1.824,1.792 1.12,0 2.528,-0.608 3.52,-2.272 -0.128,-0.288 -0.416,-0.544 -0.768,-0.608 -0.832,1.056 -1.248,1.312 -1.6,1.312 -0.288,0 -0.512,-0.384 -0.768,-1.184 l -1.728,-5.152 2.432,-3.584 c 0.48,-0.736 1.28,-0.864 1.504,-0.864 0.256,0 0.672,0.096 0.96,0.32 0.224,0.192 0.736,0.32 1.056,0.32 0.448,0 1.024,-0.64 1.024,-1.376 0,-0.8 -0.864,-1.28 -1.6,-1.28 -1.6,0 -2.656,0.576 -4.224,2.816 l -1.6,2.304 -0.896,-2.816 c -0.544,-1.664 -0.896,-2.304 -1.696,-2.304 -0.768,0 -3.104,1.344 -4.224,2.176 0.032,0.352 0.16,0.736 0.416,0.992 0.384,-0.192 1.44,-0.704 2.08,-0.704 0.416,0 0.736,0.096 0.896,0.352 0.16,0.256 0.352,0.8 0.576,1.344 z"
       id="path590" /></g><g
     aria-label="FASTHAPIX"
     transform="translate(68.584567,100.60818)"
     id="name"
     style="font-size:74.6667px;font-family:'Linux Libertine O';-inkscape-font-specification:'Linux Libertine O, Normal';white-space:pre;shape-inside:url(#rect153);display:inline;stroke:#000000"
     inkscape:label="name"><path
       d="m 244.24005,174.90517 c 6.34667,0 6.57067,1.71734 6.79467,5.07734 0.448,0.448 2.016,0.448 2.464,0 -0.0747,-1.86667 -0.14933,-3.95734 -0.14933,-6.57067 0,-2.464 0.0747,-4.48 0.14933,-6.42134 -0.448,-0.448 -2.016,-0.448 -2.464,0 -0.224,4.10667 -0.448,5.07734 -6.79467,5.07734 h -6.944 v -13.44001 c 0,-4.032 0.896,-4.77867 4.18133,-4.77867 h 3.36001 c 7.91467,0 9.78133,2.98667 11.424,8.13867 0.896,0 1.71733,-0.14933 2.31467,-0.37333 -0.448,-3.06134 -1.568,-10.22934 -1.64267,-10.82667 -0.0747,-0.14934 -0.14933,-0.224 -0.29867,-0.224 -1.344,0.29866 -1.64266,0.29866 -3.50933,0.29866 h -19.04001 c -2.38933,0 -6.64534,-0.0747 -9.632,-0.14933 -0.448,0.448 -0.448,2.016 0,2.464 5.22666,0.224 6.496,0.59734 6.496,6.79467 v 29.94135 c 0,6.19734 -1.26934,6.57067 -6.496,6.79467 -0.448,0.448 -0.448,2.016 0,2.464 2.61333,-0.0747 6.34667,-0.14933 9.70667,-0.14933 3.36,0 7.01867,0.0747 9.632,0.14933 0.448,-0.448 0.448,-2.016 0,-2.464 -5.22667,-0.224 -6.496,-0.59733 -6.496,-6.79467 v -15.00801 z"
       id="path527" /><path
       d="m 274.55478,177.89184 c -1.64267,0 -2.16534,-0.224 -1.94134,-0.97067 l 7.69067,-19.33867 h 0.448 l 7.01867,20.30934 z m -8.06401,15.23201 4.10667,-10.82667 c 0.37334,-0.97067 0.82134,-1.26934 2.61334,-1.26934 h 15.75467 l 4.33067,12.61867 c 0.82133,2.61334 -2.016,2.83734 -5.52534,3.06134 -0.448,0.448 -0.448,2.016 0,2.464 2.76267,-0.0747 6.86934,-0.14933 9.78134,-0.14933 3.06134,0 5.89867,0.0747 8.51201,0.14933 0.448,-0.448 0.448,-2.016 0,-2.464 -2.91201,-0.224 -5.45067,-0.448 -6.72001,-4.10667 l -15.38134,-42.70935 c -1.12,0.672 -3.136,1.49333 -4.10667,1.49333 l -16.94934,40.02135 c -1.94133,4.62934 -4.256,5.07734 -7.46667,5.30134 -0.448,0.448 -0.448,2.016 0,2.464 1.94134,-0.0747 4.33067,-0.14933 6.64534,-0.14933 3.06133,0 6.79467,0.0747 9.55734,0.14933 0.448,-0.448 0.448,-2.016 0,-2.464 -2.83734,-0.14933 -6.34667,-0.448 -5.15201,-3.584 z"
       id="path529" /><path
       d="m 336.22945,151.90783 c -4.33067,-0.59734 -4.10667,-2.016 -11.42401,-2.016 -7.54133,0 -14.18667,5.00267 -14.18667,12.91734 0,7.91467 6.42134,11.49867 12.99201,13.96267 4.55466,1.792 10.08,3.88267 10.08,11.12534 0,6.048 -3.43467,9.184 -9.33334,9.184 -7.01867,0 -11.49867,-3.136 -13.14134,-10.60267 -0.896,-0.29867 -1.71733,-0.14933 -2.38933,0.224 0.29867,5.74934 0.59733,7.69067 1.49333,11.34934 4.70401,0 6.72001,1.71733 13.36534,1.71733 3.43467,0 6.64534,-0.82133 9.25867,-2.38933 4.25601,-2.688 7.01867,-7.31734 7.01867,-12.09601 0,-7.91467 -6.048,-11.424 -12.17067,-13.664 -4.40533,-1.71734 -11.872,-4.48 -11.872,-10.82667 0,-4.18134 3.808,-8.36267 8.13867,-8.36267 7.31733,0 9.632,4.62933 11.12533,9.55733 0.74667,0.14934 1.71734,0.0747 2.38934,-0.448 -0.224,-3.584 -0.52267,-5.67467 -1.344,-9.632 z"
       id="path531" /><path
       d="M 369.15752,189.91318 V 161.3905 c 0,-4.77867 0.74666,-7.616 3.43466,-7.616 h 1.64267 c 5.6,0 9.10934,1.94133 10.37867,7.69067 0.82134,0 1.86667,-0.0747 2.53867,-0.37334 -0.52267,-3.43467 -0.896,-7.24267 -0.97067,-10.60267 0,-0.0747 -0.14933,-0.224 -0.224,-0.224 -2.53866,0.224 -10.82667,0.59733 -16.72534,0.59733 h -6.42133 c -5.74934,0 -14.56001,-0.37333 -17.39735,-0.59733 -0.14933,0 -0.29866,0.14933 -0.29866,0.224 -0.29867,3.36 -1.04534,7.24267 -1.86667,10.82667 0.74667,0.29867 1.64267,0.37334 2.53867,0.37334 1.49333,-5.97334 4.928,-7.91467 9.856,-7.91467 h 3.65867 c 2.76267,0 3.50934,2.83733 3.50934,7.392 v 28.74668 c 0,6.19734 -1.26934,6.57067 -7.24267,6.79467 -0.448,0.448 -0.448,2.016 0,2.464 3.65866,-0.0747 7.392,-0.14933 10.45333,-0.14933 2.83734,0 6.64534,0.0747 10.37868,0.14933 0.448,-0.448 0.448,-2.016 0,-2.464 -5.97334,-0.224 -7.24267,-0.59733 -7.24267,-6.79467 z"
       id="path533" /><path
       d="m 433.74421,189.91318 v -29.94135 c 0,-6.19733 1.26934,-6.57067 6.496,-6.79467 0.448,-0.448 0.448,-2.016 0,-2.464 -3.06133,0.0747 -6.86933,0.14933 -9.70667,0.14933 -2.83733,0 -6.34667,-0.0747 -9.632,-0.14933 -0.448,0.448 -0.448,2.016 0,2.464 5.22667,0.224 6.496,0.59734 6.496,6.79467 v 11.94667 h -25.53601 v -11.94667 c 0,-6.19733 1.26933,-6.57067 6.496,-6.79467 0.448,-0.448 0.448,-2.016 0,-2.464 -2.83733,0.0747 -5.89867,0.14933 -9.70667,0.14933 -3.73333,0 -6.79467,-0.0747 -9.632,-0.14933 -0.448,0.448 -0.448,2.016 0,2.464 5.22667,0.224 6.496,0.59734 6.496,6.79467 v 29.94135 c 0,6.19734 -1.26933,6.57067 -6.496,6.79467 -0.448,0.448 -0.448,2.016 0,2.464 3.28533,-0.0747 6.86933,-0.14933 9.70667,-0.14933 2.688,0 6.34667,0.0747 9.632,0.14933 0.448,-0.448 0.448,-2.016 0,-2.464 -5.22667,-0.224 -6.496,-0.59733 -6.496,-6.79467 v -14.85867 h 25.53601 v 14.85867 c 0,6.19734 -1.26933,6.57067 -6.496,6.79467 -0.448,0.448 -0.448,2.016 0,2.464 3.36,-0.0747 6.86934,-0.14933 9.70667,-0.14933 2.76267,0 6.34667,0.0747 9.632,0.14933 0.448,-0.448 0.448,-2.016 0,-2.464 -5.22666,-0.224 -6.496,-0.59733 -6.496,-6.79467 z"
       id="path535" /><path
       d="m 461.7442,177.89184 c -1.64267,0 -2.16533,-0.224 -1.94133,-0.97067 l 7.69067,-19.33867 h 0.448 l 7.01867,20.30934 z m -8.064,15.23201 4.10666,-10.82667 c 0.37334,-0.97067 0.82134,-1.26934 2.61334,-1.26934 h 15.75467 l 4.33067,12.61867 c 0.82134,2.61334 -2.016,2.83734 -5.52533,3.06134 -0.448,0.448 -0.448,2.016 0,2.464 2.76266,-0.0747 6.86933,-0.14933 9.78133,-0.14933 3.06134,0 5.89867,0.0747 8.51201,0.14933 0.448,-0.448 0.448,-2.016 0,-2.464 -2.912,-0.224 -5.45067,-0.448 -6.72,-4.10667 L 471.1522,149.89183 c -1.12,0.672 -3.136,1.49333 -4.10666,1.49333 l -16.94935,40.02135 c -1.94133,4.62934 -4.256,5.07734 -7.46667,5.30134 -0.448,0.448 -0.448,2.016 0,2.464 1.94134,-0.0747 4.33067,-0.14933 6.64534,-0.14933 3.06134,0 6.79467,0.0747 9.55734,0.14933 0.448,-0.448 0.448,-2.016 0,-2.464 -2.83734,-0.14933 -6.34667,-0.448 -5.152,-3.584 z"
       id="path537" /><path
       d="m 508.11219,157.65716 c 0,-2.16533 1.12,-4.77866 6.496,-4.77866 5.15201,0 10.30401,1.71733 10.30401,11.2 0,8.064 -3.88267,11.34934 -11.12534,11.34934 -1.86667,0 -4.85334,-0.14933 -5.67467,-0.37333 z m -6.34667,2.31467 v 29.94135 c 0,6.19734 -1.26933,6.57067 -6.496,6.79467 -0.448,0.448 -0.448,2.016 0,2.464 3.36,-0.0747 7.01867,-0.14933 9.70667,-0.14933 2.61333,0 7.01867,0.0747 10.752,0.14933 0.448,-0.448 0.448,-2.016 0,-2.464 -5.824,-0.29867 -7.616,-0.59733 -7.616,-6.79467 v -12.69334 c 1.64267,0.52267 3.43467,0.74667 6.048,0.74667 13.58934,0 17.69601,-8.88534 17.69601,-15.23201 0,-4.40534 -2.912,-12.39467 -16.72534,-12.39467 -2.912,0 -7.24267,0.52266 -10.22934,0.52266 -2.76267,0 -6.64533,-0.0747 -9.632,-0.14933 -0.448,0.448 -0.448,2.016 0,2.464 5.22667,0.224 6.496,0.59734 6.496,6.79467 z"
       id="path539" /><path
       d="m 548.65624,189.91318 v -29.94135 c 0,-6.19733 1.26933,-6.57067 6.496,-6.79467 0.448,-0.448 0.448,-2.016 0,-2.464 -3.28533,0.0747 -6.86934,0.14933 -9.70667,0.14933 -2.53867,0 -6.12267,-0.0747 -9.63201,-0.14933 -0.448,0.448 -0.448,2.016 0,2.464 5.22667,0.224 6.49601,0.59734 6.49601,6.79467 v 29.94135 c 0,6.19734 -1.26934,6.57067 -6.49601,6.79467 -0.448,0.448 -0.448,2.016 0,2.464 3.36001,-0.0747 6.94401,-0.14933 9.70668,-0.14933 2.61333,0 6.272,0.0747 9.632,0.14933 0.448,-0.448 0.448,-2.016 0,-2.464 -5.22667,-0.224 -6.496,-0.59733 -6.496,-6.79467 z"
       id="path541" /><path
       d="m 596.74167,191.40651 -11.42401,-15.68 c -0.74666,-0.97067 -1.19466,-1.71734 -1.19466,-2.464 0,-0.67201 0,-1.34401 0.74666,-2.24001 l 10.22934,-13.216 c 2.53867,-3.28534 4.928,-4.256 8.28801,-4.62934 0.448,-0.448 0.448,-2.016 0,-2.464 -2.24,0.0747 -5.00267,0.14933 -6.72001,0.14933 -1.71733,0 -4.85333,-0.0747 -7.84,-0.14933 -0.448,0.448 -0.448,2.016 0,2.464 3.28533,0.224 4.62933,0.672 2.912,3.136 l -9.184,13.06668 c -0.448,0.672 -0.896,0.896 -1.19467,0.896 -0.224,0 -0.59733,-0.29867 -0.896,-0.82134 l -8.28801,-12.17067 c -2.09066,-2.98667 -2.38933,-3.88267 1.79201,-4.10667 0.448,-0.448 0.448,-2.016 0,-2.464 -2.76267,0.0747 -5.52534,0.14933 -8.51201,0.14933 -2.912,0 -5.376,-0.0747 -7.616,-0.14933 -0.448,0.448 -0.37334,2.016 0.0747,2.464 3.13601,0.224 4.48001,0.672 7.54134,5.00267 l 10.67734,15.15734 c 0.59733,0.896 1.04533,1.49334 1.04533,2.24 0,0.448 -0.37333,1.19467 -0.74666,1.71734 l -11.05068,14.784 c -2.61333,3.43467 -5.00266,4.33067 -8.288,4.62934 -0.448,0.448 -0.448,2.016 0,2.464 2.24,-0.0747 5.00267,-0.14933 6.72,-0.14933 1.71734,0 4.85334,0.0747 7.84001,0.14933 0.448,-0.448 0.448,-2.016 0,-2.464 -3.36,-0.224 -4.77867,-0.59733 -2.912,-3.136 l 9.856,-13.81334 c 0.37333,-0.59734 0.896,-1.04534 1.12,-1.04534 0.29867,0 0.59734,0.224 1.04534,0.82134 l 9.184,13.14134 c 2.09067,3.06133 2.464,3.808 -1.71733,4.032 -0.448,0.448 -0.448,2.016 0,2.464 2.76266,-0.0747 5.52533,-0.14933 8.512,-0.14933 2.912,0 5.376,0.0747 7.616,0.14933 0.448,-0.448 0.37334,-2.016 -0.0747,-2.464 -3.136,-0.224 -4.40534,-0.896 -7.54134,-5.30134 z"
       id="path543" /></g><script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><g
     id="logo"
     transform="translate(126.257,250)"
     inkscape:label="logo"><g
       id="layer2"
       style="display:inline;opacity:1;stroke:#971111;stroke-opacity:1"
       inkscape:label="window"><rect
         style="display:inline;fill:#ffffff;fill-opacity:0;stroke:#971111;stroke-width:4.02254;stroke-linecap:round;stroke-linejoin:round;stroke-dasharray:none;stroke-opacity:1;paint-order:normal"
         id="border"
         width="155.97745"
         height="95.977455"
         x="2.0112722"
         y="2.0112722"
         ry="9.9644079" /><path
         style="display:inline;fill:#000000;fill-opacity:1;stroke:#971111;stroke-width:3.97559;stroke-linecap:square;stroke-linejoin:miter;stroke-dasharray:none;stroke-opacity:1"
         d="M 1.987795,17.724795 H 158.0125"
         id="path201765" /><g
         id="buttons"
         transform="translate(-4.0000019,0.89999962)"
         style="display:inline;fill:#971111;fill-opacity:1;stroke:#971111;stroke-opacity:1"><circle
           style="fill:#971111;fill-opacity:1;stroke:#971111;stroke-width:1.12744;stroke-linecap:square;stroke-linejoin:miter;stroke-dasharray:none;stroke-opacity:1"
           id="button3"
           cx="150"
           cy="9.0999985"
           r="1.4362781" /><circle
           style="fill:#971111;fill-opacity:1;stroke:#971111;stroke-width:1.12744;stroke-linecap:square;stroke-linejoin:miter;stroke-dasharray:none;stroke-opacity:1"
           id="button2"
           cx="142"
           cy="9.0999985"
           r="1.4362781" /><circle
           style="fill:#971111;fill-opacity:1;stroke:#971111;stroke-width:1.12744;stroke-linecap:square;stroke-linejoin:miter;stroke-dasharray:none;stroke-opacity:1"
           id="button1"
           cx="134"
           cy="9.0999985"
           r="1.4362781" /></g></g><g
       id="g904"
       style="display:inline;fill:#df4444;fill-opacity:1;stroke:#df4444;stroke-opacity:1"
       inkscape:label="text_libertine_path"><path
         d="m 138.44627,58.458854 -37.28301,13.52538 c -1.528952,1.646568 -1.646564,5.174928 0,5.8806 l 45.86868,-16.583292 c 1.05851,-1.999404 1.05851,-3.881196 0,-5.645376 L 101.16326,38.935262 c -1.646564,0.705672 -1.528952,4.234032 0,5.8806 z"
         id="path912"
         style="font-size:117.612px;line-height:0;font-family:'Linux Libertine Display O';-inkscape-font-specification:'Linux Libertine Display O';display:inline;fill:#971111;fill-opacity:1;stroke:#971111;stroke-width:1.2;stroke-linecap:round;stroke-opacity:1"
         transform="translate(-0.89672243,-0.49999911)"
         inkscape:label="&gt;"
         sodipodi:insensitive="true" /><path
         d="M 91.550325,30.886999 H 88.740482 L 70.242347,85.913096 h 2.809843 z"
         id="path909"
         style="font-size:78.0512px;line-height:0;font-family:'Linux Libertine Display O';-inkscape-font-specification:'Linux Libertine Display O';display:inline;fill:#971111;fill-opacity:1;stroke:#971111;stroke-width:5.774;stroke-linecap:square;stroke-opacity:1"
         transform="translate(-0.89672243,-0.49999911)"
         inkscape:label="/"
         sodipodi:insensitive="true" /><path
         d="m 23.438373,58.287523 37.24972,-13.513306 c 1.527591,-1.645098 1.645098,-5.170308 0,-5.87535 L 14.860361,55.467354 c -1.17507,2.115127 -1.17507,3.995239 0,5.640337 l 45.827732,16.685994 c 1.645098,-0.705042 1.527591,-4.230252 0,-5.87535 z"
         id="path906"
         style="font-size:117.507px;line-height:0;font-family:'Linux Libertine Display O';-inkscape-font-specification:'Linux Libertine Display O';display:inline;fill:#971111;fill-opacity:1;stroke:#971111;stroke-width:1.19893;stroke-linecap:round;stroke-opacity:1"
         transform="matrix(0.99907924,0,0,1.0009216,-0.89672243,-0.49999911)"
         inkscape:label="&lt;"
         sodipodi:insensitive="true" /></g></g></svg>
